{"version":3,"file":"static/js/764.e45aab68.chunk.js","mappings":"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","sources":["component/UI/pages/contactUs/sections/contactLanding/ContactLanding.jsx","component/UI/pages/contactUs/sections/contactItems/units/ItemContact.jsx","component/UI/pages/contactUs/sections/contactItems/ContactItems.jsx","component/UI/pages/contactUs/sections/contactForm/ContactForm.jsx","component/UI/pages/contactUs/ContactUs.jsx","component/common/TextError.jsx"],"sourcesContent":["import React from \"react\";\nimport { connect } from \"react-redux\";\nimport WaveLanding from \"../../../../../common/WaveLanding\";\n\nfunction ContactLanding({ contactLanding, contactUsImgs }) {\n  return (\n    <section className=\"landingSections contactsLanding\">\n      <div className=\"container\">\n        <div className=\"content-box\">\n          <h1 className=\"main-header\">{contactLanding.header}</h1>\n        </div>\n        <div className=\" contact-landing-img\">\n          <img src={contactUsImgs.landingContactImg} alt=\"contacts us\"></img>\n        </div>\n        <div className=\"bullets-item\"></div>\n        <div className=\"bullets-item\"></div>\n        <div className=\"bullets-item\"></div>\n        <div className=\"bullets-item\"></div>\n        <div className=\"bullets-item\"></div>\n      </div>\n      <WaveLanding />\n    </section>\n  );\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    contactLanding: state.dataText.dataJson.contactsPage.contactLanding,\n    contactUsImgs: state.allImages.pagesImgs.contactUsImgs\n  };\n};\n\nexport default connect(mapStateToProps)(ContactLanding);\n","import React from \"react\";\n\nfunction ItemContact({image,header,address}) {\n  return (\n    <div className=\"item-contact\">\n      <div className=\"item-image\"><img src={image} alt=\"\"/>{}</div>\n      <div className=\"item-content\">\n        <h4 className=\"item-header\">{header}</h4>\n        <p className=\"item-contact-address\" dir=\"ltr\">{address}</p>\n      </div>\n    </div>\n  );\n}\n\nexport default ItemContact;\n","import React from \"react\";\nimport { connect } from \"react-redux\";\n\nimport ItemContact from \"./units/ItemContact\";\n\nfunction ContactItems({ contactItems, contactUsImgs }) {\n  return (\n    <section className=\"contact-items\">\n      <div className=\"container\">\n        {contactItems.map((el, inx) => (\n          <ItemContact\n            key={inx + el.id}\n            image={contactUsImgs[`contactImg${inx + 1}`]}\n            header={el.itemHeader}\n            address={el.contactAddress}\n          />\n        ))}\n      </div>\n    </section>\n  );\n}\nconst mapStateToProps = (state) => {\n  return {\n    contactItems: state.dataText.dataJson.contactsPage.contactItems,\n    contactUsImgs: state.allImages.pagesImgs.contactUsImgs\n  };\n};\n\nexport default connect(mapStateToProps)(ContactItems);\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { ErrorMessage, Field, Form, Formik } from \"formik\";\nimport * as Yup from \"yup\";\nimport TextError from \"./../../../../../common/TextError\";\n\nfunction ContactForm({ contactForm, errorMsg }) {\n  const initialValues = {\n    name: \"\",\n    email: \"\",\n    subject: \"\",\n    message: \"\",\n  };\n  const validationSchema = Yup.object({\n    name: Yup.string().required(errorMsg.required),\n    email: Yup.string().email(errorMsg.invalid).required(errorMsg.required),\n    subject: Yup.string().required(errorMsg.required),\n    message: Yup.string().required(errorMsg.required),\n  });\n  const onSubmit = (values, submitProps) => {\n    console.log(values);\n    submitProps.setSubmitting(false);\n    submitProps.resetForm();\n  };\n  return (\n    <section className=\"contact-form\">\n      <div className=\"container\">\n        <h3>{contactForm.fromHeader}</h3>\n        <div className=\"form-box\">\n          <Formik\n            initialValues={initialValues}\n            validationSchema={validationSchema}\n            onSubmit={onSubmit}\n          >\n            {(formik) => (\n              <Form>\n                <div className=\"form-fields\">\n                  <div className=\"contact-left\">\n                    <div className=\"contact-name-input\">\n                      <Field\n                        type=\"text\"\n                        id=\"contact-name-input\"\n                        name=\"name\"\n                        placeholder={contactForm.fromPlaceholder.name}\n                      />\n                      <ErrorMessage name=\"name\" component={TextError} />\n                    </div>\n                    <div className=\"contact-email-input\">\n                      <Field\n                        type=\"email\"\n                        id=\"contact-email-input\"\n                        name=\"email\"\n                        placeholder={contactForm.fromPlaceholder.email}\n                      />\n                      <ErrorMessage name=\"email\" component={TextError} />\n                    </div>\n                    <div className=\"contact-subject-input\">\n                      <Field\n                        type=\"text\"\n                        id=\"contact-subject-input\"\n                        name=\"subject\"\n                        placeholder={contactForm.fromPlaceholder.subject}\n                      />\n                      <ErrorMessage name=\"subject\" component={TextError} />\n                    </div>\n                  </div>\n                  <div className=\"contact-right\">\n                    <div className=\"contact-message\">\n                      <Field\n                        as=\"textarea\"\n                        id=\"contact-subject-input\"\n                        name=\"message\"\n                        placeholder={contactForm.fromPlaceholder.message}\n                      ></Field>\n                      <ErrorMessage name=\"message\" component={TextError} />\n                    </div>\n                  </div>\n                </div>\n                <button type=\"submit\" className=\"contact-form-btn\">\n                  {contactForm.fromBtn}\n                </button>\n              </Form>\n            )}\n          </Formik>\n        </div>\n      </div>\n    </section>\n  );\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    contactForm: state.dataText.dataJson.contactsPage.contactForm,\n    errorMsg: state.dataText.dataJson.errorMsg,\n  };\n};\n\nexport default connect(mapStateToProps)(ContactForm);\n","import React from \"react\";\nimport ContactLanding from \"./sections/contactLanding/ContactLanding\";\nimport ContactItems from \"./sections/contactItems/ContactItems\";\nimport ContactForm from \"./sections/contactForm/ContactForm\";\nimport { connect } from \"react-redux\";\nimport usePageMeta from './../../../../hooks/usePageMeta';\n\nfunction ContactUs({ metaContactUs }) {\n    usePageMeta(metaContactUs.title, metaContactUs.description);\n\n  return (\n      <div className=\"contact-page\">\n        <ContactLanding />\n        <ContactItems />\n        <ContactForm />\n      </div>\n  );\n}\nconst mapStateToProps = (state) => {\n  return {\n    metaContactUs: state.dataText.dataJson.contactsPage.meta,\n  };\n};\n\nexport default connect(mapStateToProps)(ContactUs);\n","/*\n *   Copyright (c) 2023 \n *   All rights reserved.\n */\nimport React from \"react\";\nimport { connect } from \"react-redux\";\n\nfunction TextError(props) {\n\n  return <div className=\"form-error-msg\">{props.children}</div>;\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    lang: state.langDir.lang,\n  };\n};\n\nexport default connect(mapStateToProps)(TextError);"],"names":["connect","state","contactLanding","dataText","dataJson","contactsPage","contactUsImgs","allImages","pagesImgs","className","header","src","landingContactImg","alt","WaveLanding","image","address","dir","contactItems","map","el","inx","itemHeader","contactAddress","id","contactForm","errorMsg","validationSchema","Yup","name","required","email","invalid","subject","message","fromHeader","initialValues","onSubmit","values","submitProps","console","log","setSubmitting","resetForm","formik","type","placeholder","fromPlaceholder","component","TextError","as","fromBtn","metaContactUs","meta","usePageMeta","title","description","lang","langDir","props","children"],"sourceRoot":""}